plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
}

group = 'soccer.game'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// add dependencies to H2 in-memory database and Java Persistency API
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}

jacocoTestReport{
	reports{
		xml.enabled true
		csv.enabled false
		html.enabled false
	}
}
tasks.getByName("sonarqube").dependsOn(test)

test.finalizedBy jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", "soccer.game:streetSoccerManager"
		property "sonar.qualitygate.wait", true
		property "sonar.login", "eca5c6538dd29f111868c9d9552ed9c9c3ba85c0"
	}
}
